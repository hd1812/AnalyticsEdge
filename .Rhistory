?lapply
?split
library(datasets)
data(iris)
data
?iris
str(iris)
mean(iris$Sepal.Length,na.rm=TRUE)
mean(iris$Sepal.Length,na.rm=TRUE)
iris
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
mtcars
?tapply
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
cylFour<-subset(mtcars,mtcars$cyl==4)
cylEight<-subset(mtcars,mtcars$cyl==8)
cylFour
mean(cylFour$hp)-mean(cylEight$hp)
debug(ls)
ls(asd,fd)
?ls
0
.Ob <- 1
ls(pattern = "O")
?debug
iris
v<-subset(iris,Species==virginica)
v<-subset(iris,iris$Species==virginica)
v<-subset(iris,iris$Species==virginica)
iris
v<-subset(iris,iris$Species==virinica)
v<-subset(iris,iris$Species==virginica)
iris.$Species
iris$Species
iris$Species==virginica
v<-subset(iris,iris$Species=="virginica")
v
mean(v$Sepal.Length)
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
mtcar
mtcars
q()
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("installr")
library(installr)
update()
installr()
install.packages("datasets")
install.packages("datasets")
library(datasets)
library(datasets)
hist(airquality$Ozone)
with(airquality,plot(Wind,Ozone))
airquality<-transform(airquality,Month=factor(Month))
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)")
with(airquality,plot(Wind,Ozone,main="Ozone and Wind in New York City"))
with(subset(airquality,Month==5),points(Wind,Ozone,col="blue"))
with(airquality,plot(Wind,Ozone,main="Ozone and Wind in New York City"))
with(subset(airquality,Month==5),points(Wind,Ozone,col="blue"))
legend("topright",pch=1,col=c("blue","red"),legned=c("May","Other Months"))
with(airquality,plot(Wind,Ozone,main="Ozone and Wind in New York City"))
with(subset(airquality,Month==5),points(Wind,Ozone,col="blue"))
with(subset(airquality,Month!=5),points(Wind,Ozone,col="red"))
legend("topright",pch=1,col=c("blue","red"),legned=c("May","Other Months"))
legend("topright",pch=1,col=c("blue","red"),legend=c("May","Other Months"))
with(airquality,plot(Wind,Ozone,main="Ozone and Wind in NeW York City",pch=20))
model<-lm(Ozone~Wind,airquality)
abline(mode,lwd=2)
abline(model,lwd=2)
par(mfrow=c(1,2))
with(airquality,{
plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
plot(Temp,Ozone,main="Ozone and Temperature")
mtext(â€œOzone and Weather in New York City", outer=TRUE)
mtext("Ozone and Weather in New York City",outer=TRUE)
})
par(mfrow=c(1,2))
with(airquality,{
plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
plot(Temp,Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer=TRUE)
})
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
with(airquality,{
plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
plot(Temp,Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer=TRUE)
})
####Base Plotting Demonstration
x<-rnorm(100)
hist(x)
y<-rnorm(100)
plot(x,y)
z<-rnorm(100)
plot(x,z)
par(mar=c(2,2,2,2))
####Base Plotting Demonstration
x<-rnorm(100)
hist(x)
y<-rnorm(100)
plot(x,y)
z<-rnorm(100)
plot(x,z)
par(mar=c(2,2,2,2))
install.packages("httr")
install.packages("XML")
library(httr)
library(XML)
?httr
install.packages("httpuv")
library(httpuv)
library(httr)
library(XML)
##Find OAuth settings for github
oauth_endpoints("github")
##After making application, replace key and secret below
myapp <- oauth_app("github",
key = "3cdab49f37411ce420a7",
secret = "15b444271aa808212c43308b858c34882dac3724")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
?fromJSON
fromJSON(toJSON(req))
install.pacakges("JSON")
install.packages("JSON")
install.packages("jsonlite")
library(jsonlite)
install.packages("jsonlite")
library(jsonlite)
?fromJSON
?fromJSON
install.packages("jsonlite")
utils:::menuInstallPkgs()
ls()
content(req)
req$permissions$pull
q()
install.packages("installr")
AnonymityPoll<-read.csv("AnonymityPoll.csv")
setwd("C:/Users/DH/Desktop/Git Workspace/EdxWorkspace/Analytics Edge")
AnonymityPoll<-read.csv("AnonymityPoll.csv")
str(AnonymityPoll)
table(AnonymityPoll$Smartphone)
summary(AnonymityPoll$Smartphone)
472+487+43
poll<-read.csv("AnonymityPoll.csv")
str(poll)
table(poll$Smartphone)
summary(poll$Smartphone)
table(poll$Sex, poll$Region)
table(poll$Region)
table(poll[poll$Region=="Midwest"])
poll$Region=="Midwest"
poll[poll$Region=="Midwest"]
temp<-subset(poll,poll$Region=="Midwest")
temp
table(temp)
table(temp$State)
table(temp$Region)
$State
table(temp$State)
temp$s
temp$State
tapply(poll,poll$State,nrow)
tapply(poll,poll$State,mean)
str(poll$Region)
table(poll$Region)
temp<-subset(poll,poll$Region=="South")
table(temp)
table(temp$State)
nrow(subset(poll,poll$Internet.Use==1 & poll$Smartphone==0))
nrow(subset(poll,poll$Internet.Use==1 & poll$Smartphone==1))
table(subset(poll$Internet.Use),subset(poll$Smartphone))
table(subset(poll,poll$Internet.Use),subset(poll,poll$Smartphone))
nrow(subset(poll,poll$Internet.Use==0 & poll$Smartphone==0))
nrow(subset(poll,poll$Internet.Use==0 & poll$Smartphone==1))
nrow(subset(poll,poll$Smartphone==na)
nrow(subset(poll,poll$Smartphone==na))
nrow(subset(poll,poll$Smartphone==na))
nrow(subset(poll,is.na(poll$Smartphone)))
nrow(subset(poll,is.na(poll$Internet.Use)))
nrow(subset(poll,is.na(poll$Smartphone)))
?any
summary(poll)
mean(poll$Info.On.Internet)
mean(poll$Info.On.Internet,na.rm = TRUE)
nrow(subset(poll,poll$Info.On.Internet==0))
nrow(subset(poll,poll$Info.On.Internet==11))
nrow(subset(poll,poll$Worry.About.Info))
nrow(subset(poll,poll$Worry.About.Info==1))
nrow(subset(poll,!is.na(poll$Worry.About.Info==1)))
386/790
nrow(subset(poll,!is.na(poll$Anonymity.Possible)))
nrow(subset(poll,poll$Anonymity.Possible==1))
278/753
table(poll$Tried.Masking.Identity)
128/(128+656)
table(poll$Privacy.Laws.Effective)
234/(237+660)
234/(234+660)
hist(poll$Age)
hist(poll$Age,break=20)
?hist
hist(poll$Age,breaks=20)
hist(poll$Age,breaks=4)
hist(poll$Age)
table(poll$Age,poll$Info.On.Internet)
max(table(poll$Age,poll$Info.On.Internet))
jitter(c(1, 2, 3))
?jitter
plot(jitter(limited$Age), jitter(limited$Info.On.Internet))
plot(jitter(poll$Age), jitter(poll$Info.On.Internet))
tapply(poll,poll$Smartphone,mean)
tapply(poll$Info.On.Internet,poll$Smartphone,mean)
tapply(poll$Info.On.Internet,poll$Smartphone,mean,na.rm=TRUE)
n=nrow(subset(poll,!is.na(poll$Tried.Masking.Identity)))
n
tapply(poll$Tried.Masking.Identity,poll$Smartphone,/784,na.rm=TRUE)
tapply(poll$Tried.Masking.Identity,poll$Smartphone,nrow,na.rm=TRUE)
tapply(poll$Tried.Masking.Identity,poll$Smartphone,sum,na.rm=TRUE)
33/784
33/784
93/784
tapply(poll$Tried.Masking.Identity,poll$Smartphone,table,na.rm=TRUE)
tapply(poll$Tried.Masking.Identity,poll$Smartphone,table)
33/(33+248)
93/(93+390)
33+248+93+390
